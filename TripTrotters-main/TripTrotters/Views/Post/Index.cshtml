@using TripTrotters.Services.Abstractions;
@using TripTrotters.ViewModels;

@model IEnumerable<Post>
@{
    int postNo = 1;
    int commNo = 1;
    int commIteration = 1;
}
@inject IImageService _imageService;

<script>
    $(document).ready(function () {
        //Set comments toggle for each post

    @for (int i = 1; i <= Model.Count(); i++)
    {
        string postEditBtnId = $"#postEditBtn{i}";
        string postEditInfoId = $"#postEditInfo{i}";
        string postinfoId = $"#postInfo{i}";
        string commentBtnId = $"#commentBtn{i}";
        string commentAddId = $"#commentAdd{i}";
        string commentsListId = $"#commentsList{i}";
        string noOfCommentsBtnId = $"#noOfCommentsBtn{i}";
        string carouselId = $"#Carousel{i}";

        <text>
                $(document).on('click', '@commentBtnId', function () {
                    $('@commentAddId').toggle();
                });

            $(document).on('click', '@noOfCommentsBtnId', function () {
                $('@commentsListId').toggle();
            });

            $(document).on('click', '@postEditBtnId', function () {
                $('@postinfoId').toggle();
            });

            $(document).on('click', '@postEditBtnId', function () {
                $('@postEditInfoId').toggle();
            });
            $(document).on('click', '@postEditBtnId', function () {
                $('@carouselId').toggle();
            });
        </text>
    }

    @foreach (Post post in Model)
    {
        int totalComments = post.Comments.Count + commIteration;
        while (commIteration <= totalComments)
        {
            string commentTextId = $"#commentsText{commIteration}";
            string commentEditId = $"#commentEdit{commIteration}";
            string commentEditBtnId = $"#commentEditBtn{commIteration}";

            <text>
                    $(document).on('click', '@commentEditBtnId', function () {
                        $('@commentTextId').toggle();
                    });

                $(document).on('click', '@commentEditBtnId', function () {
                    $('@commentEditId').toggle();
                });

            </text>
            commIteration++;
        }
    }
        });

</script>




<div class="container">
    <div class="d-flex align-items-center justify-content-center flex-row">
        @if (User.IsInRole("Traveller"))
        {
            <a type="button" class="btn btn-success p-2 me-1" style="background-color: #2ec42e; border: none" asp-controller="Post" asp-action="Create">New Post</a>
        }
        <form method="post" asp-action="Index" class="d-flex">
            <input type="hidden" name="searchString" value="userNames" />
            <input class="form-control me-1 p-2" type="search" name="userName" placeholder="Search user" aria-label="Search" style="width: 300px">
            <button class="btn btn-success p-2" style="background-color: #2ec42e; border:none" type="submit">
                <i class="fa-solid fa-magnifying-glass"></i>
            </button>
        </form>
    </div>
    <div class="feed">
        @foreach (var item in Model)
        {

            <div class="post-body">
                <div class="user-info">
                    <div class="user">
                        <img src="@item.User.ImageUrl" class="user-pro-pic">
                        <h2>@item.User.UserName</h2>
                    </div>
                    @if (item.UserId == int.Parse(User.GetUserId()))
                    {
                        <div class="d-flex">
                            <button id="@string.Format("postEditBtn{0}",postNo)" class="btn btn-light p-2 me-1" style="background-color: transparent; border: none; position: relative; top:-8px">
                                <span class="fa-solid fa-edit" aria-hidden="true" style="color: #2ec42e"></span>
                            </button>

                            @{
                                ViewData["Id"] = item.Id;
                            }
                            @Html.Partial("Delete.cshtml", new Post{Id = (int)ViewData["Id"]})
                        </div>
                    }

                </div>
                <div class="date-time">
                    @item.Date
                </div>
                <div id="@string.Format("postInfo{0}", postNo)">
                    <div class="postTitle">
                       <p> Apartament: @item.Apartment.Title </p>
                        @item.Title - @item.Budget RON/night
                    </div>

                    <div class="description">
                        @item.Description
                    </div>
                </div>
                <div id="@string.Format("postEditInfo{0}", postNo)" style="display:none; margin-bottom:10px">
                    @{
                        var Images = await _imageService.GetAllImagesByPostId(item.Id);
                        List<string> ImageURLS = new List<string>();
                        foreach (var postImage in Images)
                        {
                            ImageURLS.Add(postImage.ImageUrl);
                        }
                    }
                    @Html.Partial("Edit.cshtml", new EditPostViewModel{ Id = item.Id, Budget = item.Budget, Title = item.Title, Description = item.Description, Likes = item.Likes, Date = item.Date, Comments = item.Comments, ApartmentId = item.ApartmentId, UserId = item.UserId, ImageUrls = ImageURLS})
                </div>
                <div class="post-detail">
                    <div id="@string.Format("Carousel{0}",postNo)" class="carousel slide" data-bs-ride="carousel">
                        @{
                            var postImages = await _imageService.GetAllImagesByPostId(item.Id);
                            int imgNo = 1;
                        }

                        <div class="carousel-inner">
                            @foreach (var image in postImages)
                            {
                                @if (imgNo == 1)
                                {
                                    <div class="carousel-item active">
                                        <img src="@image.ImageUrl" class="d-block w-100" alt="...">
                                    </div>
                                }
                                else
                                {
                                    <div class="carousel-item">
                                        <img src="@image.ImageUrl" class="d-block w-100" alt="...">
                                    </div>
                                }
                                imgNo++;
                            }
                        </div>

                        <button class="carousel-control-prev" type="button" data-bs-target="@string.Format("#Carousel{0}",postNo)" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="@string.Format("#Carousel{0}",postNo)" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>


                    <div class="likes-comment-preview">
                        <div class="likes-preview">
                            <span class="fas fa-thumbs-up"></span>
                            <span class="count-likes">@item.Likes</span>
                        </div>
                        <div class="comment-preview">
                            <button id="@string.Format("noOfCommentsBtn{0}",postNo)"> @item.Comments.Count comments</button>
                        </div>
                    </div>

                </div>
                <div class="likes-comment-buttons">
                    <div class="like">
                        @{
                            ViewData["Id"] = item.Id;
                        }
                        @Html.Partial("UpdateLike.cshtml", new EditPostViewModel{ Id = (int) ViewData["Id"]})
                    </div>
                    <div class="comment-button">
                        <button id="@string.Format("commentBtn{0}",postNo)" type="button" class="btn btn-light">
                            <span class="far fa-comment"></span>
                            <i>Comment</i>
                        </button>
                    </div>
                </div>

                <div id="@string.Format("commentAdd{0}",postNo)" style="display:none">
                    <div class="comment-form">
                        @{
                            ViewData["postId"] = item.Id;
                        }
                        @Html.Partial("~/Views/Comment/Create.cshtml", new CommentViewModel{ PostId = (int)ViewData["postId"]})

                    </div>
                </div>
                <div id="@string.Format("commentsList{0}",postNo)" style="display:none">
                    <div class="comments">
                        @foreach (var comm in item.Comments)
                        {
                            <div class="comments-block">
                                <div class="comments-block-details">
                                    <h3 class="comments-block-details-user">@comm.User</h3>
                                    <div class="comments-block-details-date">@comm.Date</div>
                                    @if (comm.UserId == int.Parse(User.GetUserId()))
                                    {
                                        <div class="comments-block-details-edit">
                                            <button class="btn" id="@string.Format("commentEditBtn{0}",commNo)">Edit</button>
                                        </div>
                                    }
                                    @if (item.UserId == int.Parse(User.GetUserId()) || comm.UserId == int.Parse(User.GetUserId()))
                                    {
                                        <div class="comments-block-details-delete">
                                            @{
                                                ViewData["Id"] = comm.Id;
                                            }
                                            @Html.Partial("~/Views/Comment/Delete.cshtml", new CommentViewModel{ Id = (int)ViewData["Id"]})
                                        </div>
                                    }

                                </div>
                                <div class="comments-block-text" id="@string.Format("commentsText{0}",commNo)">
                                    @comm.Text
                                </div>
                                @if (comm.UserId == int.Parse(User.GetUserId()))
                                {
                                    <div id="@string.Format("commentEdit{0}",commNo)" style="display:none">
                                        @{
                                            ViewData["Id"] = comm.Id;
                                            ViewData["Text"] = comm.Text;
                                        }
                                        @Html.Partial("~/Views/Comment/Edit.cshtml", new CommentViewModel{ Id = (int)ViewData["Id"], Text = (string) ViewData["Text"]})
                                    </div>

                                }

                                <div class="comments-block-like">
                                    @if (comm.Like > 0)
                                    {
                                        <div class="comments-block-like-count">@comm.Like Likes</div>
                                    }
                                    @{
                                        ViewData["Id"] = comm.Id;
                                    }
                                    @Html.Partial("~/Views/Comment/UpdateLike.cshtml", new CommentViewModel{ Id = (int)ViewData["Id"]})
                                </div>
                            </div>
                            commNo++;
                        }
                    </div>
                </div>
            </div>
            postNo++;
        }
    </div>

</div>
